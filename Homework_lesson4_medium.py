import re
# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь заглавные первые буквы.
# email - не должен иметь заглавных букв и должен быть в формате:
# текст в нижнем регистре, допускается нижнее подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net), te_4_st@test.com - верно указан.


# name = input('Введите имя: ')
# surname = input('Введите фамилию: ')
# email = input('Введите email: ')
#
# pattern_name = '[A-ZА-Я]{1,}'
# pattern_surname = '[A-ZА-Я]{1,}'
# pattern_email = '[a-z 0-9 _]+@[a-z0-9]+\.(ru|com|org)'
#
# while re.match(pattern_name, name) == None:
#     name = input('Имя должно содержать заглавную букву. Введите еще раз: ')
# while re.match(pattern_surname, surname) == None:
#     surname = input('Фамилия должна содержать заглавную букву. Введи еще раз: ')
# while re.match(pattern_email, email) == None:
#     email = input('текст в нижнем регистре, допускается нижнее подчеркивание и цифры.'
#                  'Допустимые домены: .com, .ru, .org.  Введи еще раз: ')







# Задача - 2:
# Вам дан текст:

some_str = '''
Мороз и солнце; день чудесный!
Еще ты дремлешь, друг прелестный —
Пора, красавица, проснись:
Открой сомкнуты негой взоры
Навстречу северной Авроры,
Звездою севера явись!
Вечор, ты помнишь, вьюга злилась,
На мутном небе мгла носилась;
Луна, как бледное пятно,
Сквозь тучи мрачные желтела,
И ты печальная... сидела —
А нынче. погляди в окно:
Под голубыми небесами
Великолепными коврами,
Блестя на солнце, снег лежит;
Прозрачный лес один чернеет,
И ель сквозь иней зеленеет,
И речка подо льдом блестит.
Вся комната янтарным блеском
Озарена. Веселым треском
Трещит затопленная печь.
Приятно думать. у лежанки.
Но знаешь: не велеть ли в санки
Кобылку бурую запречь?
Скользя по утреннему снегу,
Друг милый, предадимся бегу
Нетерпеливого коня
И навестим поля пустые,
Леса, недавно столь густые,
И берег, милый для меня.'''

# Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# более одной точки, при любом исходе сообщите результат пользователю!

pattern = '(\.{2,})'

if re.search(pattern, some_str) == None:
    print('В данном тексте нет повторяющихся точек... (<= такие как вот эти)')
else:
    print('В данном тексте {} повторяющихся точек'.format(len(re.findall(pattern, some_str))))